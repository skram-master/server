services:
  app:
    build:
      context: .
      dockerfile: docker/ktor/dev.Dockerfile
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
    volumes:
      - ./detekt:/home/gradle/app/detekt
      - ./infrastructure:/home/gradle/app/infrastructure
      - ./domain:/home/gradle/app/domain
      - ./adapter:/home/gradle/app/adapter
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .dev.env
    networks:
      - skram-master-server-network
  db:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PGPORT: 5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1s
    env_file:
      - .dev.env
    networks:
      - skram-master-server-network

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    restart: always
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .dev.env
    networks:
      - skram-master-server-network

networks:
  skram-master-server-network: